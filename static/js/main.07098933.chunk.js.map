{"version":3,"sources":["components/AppContext.jsx","api/api.js","components/PokeCard/PokeCard.jsx","components/LoadButton/LoadButton.jsx","components/PokeList/PokeList.jsx","components/PokeInfo/PokeInfo.jsx","App.jsx","index.js"],"names":["AppContext","React","createContext","pokemons","setPokemons","selectedPokemonUrl","setSelectedPokemonUrl","pokemonQuantity","setPokemonQuantity","AppProvider","children","useState","useEffect","a","fetch","response","ok","Error","json","responseData","results","fetchPokemons","catch","error","console","log","contextValue","Provider","value","PokemonCard","poke","pokemonInfo","setPokemonInfo","useContext","name","url","fetchPokemon","word","colors","fire","grass","electric","water","ground","rock","fairy","poison","bug","dragon","psychic","flying","fighting","normal","className","onClick","onKeyDown","src","sprites","front_default","alt","charAt","toUpperCase","slice","types","map","type","key","slot","style","backgroundColor","LoadButton","curent","PokemonList","pokemon","PokeInfo","pokemonDetails","setPokemonDetails","fetchPokemonDetails","length","stats","item","stat","base_stat","weight","moves","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.07098933.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BASE_URL } from '../api/api';\n\nexport const AppContext = React.createContext({\n  pokemons: [],\n  setPokemons: () => {},\n  selectedPokemonUrl: '',\n  setSelectedPokemonUrl: () => {},\n  pokemonQuantity: null,\n  setPokemonQuantity: () => {},\n\n});\n\nexport const AppProvider = ({ children }) => {\n  const [pokemons, setPokemons] = useState([]);\n  const [selectedPokemonUrl, setSelectedPokemonUrl] = useState([]);\n  const [pokemonQuantity, setPokemonQuantity] = useState(12);\n\n  useEffect(() => {\n    const fetchPokemons = async() => {\n      const response = await fetch(`${BASE_URL}${pokemonQuantity}`);\n\n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n\n      const responseData = await response.json();\n\n      setPokemons(responseData.results);\n    };\n\n    fetchPokemons().catch((error) => {\n      // eslint-disable-next-line\n      console.log(error);\n    });\n  }, [pokemonQuantity]);\n\n  const contextValue = {\n    pokemons,\n    setPokemons,\n    selectedPokemonUrl,\n    setSelectedPokemonUrl,\n    pokemonQuantity,\n    setPokemonQuantity,\n  };\n\n  return (\n    <AppContext.Provider value={contextValue}>\n      {children}\n    </AppContext.Provider>\n  );\n};\n","export const BASE_URL = `https://pokeapi.co/api/v2/pokemon/?limit=`;\n","import React, { useEffect, useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { AppContext } from '../AppContext';\n\nexport const PokemonCard = ({ poke }) => {\n  const [pokemonInfo, setPokemonInfo] = useState(null);\n  const { setSelectedPokemonUrl } = useContext(AppContext);\n  const { name, url } = poke;\n\n  useEffect(() => {\n    const fetchPokemon = async() => {\n      const response = await fetch(url);\n\n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n\n      const responseData = await response.json();\n\n      setPokemonInfo(responseData);\n    };\n\n    fetchPokemon().catch((error) => {\n      // eslint-disable-next-line\n      console.log(error);\n    });\n\n    fetchPokemon();\n  }, []);\n\n  const capitalize = word => (\n    `${word.charAt(0).toUpperCase()}${word.slice(1)}`\n  );\n\n  const colors = {\n    fire: '#f5caba',\n    grass: '#c9f099',\n    electric: '#f0e7a3',\n    water: '#b4e0e0',\n    ground: '#a6977b',\n    rock: 'a8a194',\n    fairy: '#f5baee',\n    poison: '#d7baf5',\n    bug: '#e3c676',\n    dragon: '#97b3e6',\n    psychic: '#f2b8ca',\n    flying: '#d8f0ef',\n    fighting: '#ffe6bd',\n    normal: '#fff',\n  };\n\n  if (pokemonInfo === null) {\n    return <h1>Loading</h1>;\n  }\n\n  return (\n    // eslint-disable-next-line\n    <div\n      className=\"app__card card\"\n      onClick={() => {\n        setSelectedPokemonUrl(url);\n      }}\n      onKeyDown={() => {\n        setSelectedPokemonUrl(url);\n      }}\n    >\n      <img\n        src={pokemonInfo.sprites.front_default}\n        alt={pokemonInfo.name}\n        className=\"card__image\"\n      />\n      <h1 className=\"card__title\">\n        {capitalize(name)}\n      </h1>\n      <div className=\"card__info\">\n        {pokemonInfo.types.map(type => (\n          <div\n            key={type.slot}\n            className=\"card__subtitle\"\n            style={{ backgroundColor: colors[type.type.name] }}\n          >\n            {type.type.name}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nPokemonCard.propTypes = {\n  poke: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    url: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import React, { useContext } from 'react';\nimport { AppContext } from '../AppContext';\n\nexport const LoadButton = () => {\n  const { setPokemonQuantity } = useContext(AppContext);\n\n  return (\n    <button\n      type=\"button\"\n      className=\"load-more__button button is-link is-large is-rounded\"\n      onClick={() => {\n        setPokemonQuantity(curent => curent + 12);\n      }}\n    >\n      Load more\n    </button>\n  );\n};\n","import React, { useContext } from 'react';\nimport { AppContext } from '../AppContext';\nimport { PokemonCard } from '../PokeCard';\nimport { LoadButton } from '../LoadButton';\n\nexport const PokemonList = () => {\n  const { pokemons } = useContext(AppContext);\n\n  return (\n    <div>\n      <h1 className=\"app__title\">Pokedex</h1>\n      <ul className=\"app__cards\">\n        {pokemons\n          .map(pokemon => (\n            <li key={pokemon.name}>\n              <PokemonCard\n                poke={pokemon}\n              />\n            </li>\n          ))}\n        <div className=\"app__button\">\n          <LoadButton />\n        </div>\n      </ul>\n    </div>\n  );\n};\n","import React, { useContext, useState, useEffect } from 'react';\nimport { AppContext } from '../AppContext';\n\nexport const PokeInfo = () => {\n  const { selectedPokemonUrl } = useContext(AppContext);\n  const [pokemonDetails, setPokemonDetails] = useState(null);\n\n  useEffect(() => {\n    const fetchPokemonDetails = async() => {\n      const response = await fetch(selectedPokemonUrl);\n\n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n\n      const responseData = await response.json();\n\n      setPokemonDetails(responseData);\n    };\n\n    fetchPokemonDetails().catch((error) => {\n      // eslint-disable-next-line\n      console.log(error);\n    });\n\n    fetchPokemonDetails();\n  }, [selectedPokemonUrl]);\n\n  if (selectedPokemonUrl.length === 0) {\n    return <h1 className=\"app__title\">select a pokemon</h1>;\n  }\n\n  if (pokemonDetails === null) {\n    return <h1>loading</h1>;\n  }\n\n  return (\n    <div className=\"info-card\">\n      <div className=\"card-image\">\n        <img\n          className=\"card__image\"\n          src={pokemonDetails.sprites.front_default}\n          alt={pokemonDetails.name}\n        />\n      </div>\n\n      <h1 className=\"card__title\">{pokemonDetails.name}</h1>\n\n      <div className=\"card__table\">\n        <table className=\"table\">\n          <tbody>\n            <tr>\n              <td className=\"card__table\">Type</td>\n              <td>\n                {pokemonDetails.types.map(type => (\n                  <span>{`${type.type.name} `}</span>))}\n              </td>\n            </tr>\n\n            {pokemonDetails.stats.map((item) => {\n              const { stat } = item;\n\n              return (\n                <tr key={stat.name}>\n                  <td>\n                    {stat.name}\n                  </td>\n\n                  <td>{item.base_stat}</td>\n                </tr>\n              );\n            })}\n\n            <tr>\n              <td>Weight</td>\n\n              <td>{pokemonDetails.weight}</td>\n            </tr>\n\n            <tr>\n              <td>total moves</td>\n\n              <td>{pokemonDetails.moves.length}</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { AppProvider } from './components/AppContext';\nimport { PokemonList } from './components/PokeList';\nimport { PokeInfo } from './components/PokeInfo';\nimport './App.scss';\n\nconst App = () => (\n  <AppProvider>\n    <div className=\"app\">\n      <PokemonList className=\"app__cards\" />\n      <PokeInfo />\n    </div>\n  </AppProvider>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}